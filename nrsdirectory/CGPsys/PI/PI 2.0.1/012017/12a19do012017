----------------------------------------------------------------------------------------------------------------------
######################################################################################################################
#<#>######### Better viewed in half, or full screen mode. This 3 lines must fit exactly into the window ##########<#>
######################################################################################################################

|trabalho                                                       | estudo                                 |
|custo energético de manutenção do corpo(energia*tempo)         | custo energético de manutenção do corpo|
|funçao do trabalho(execuçao*tempo)                             | função de trabalho(eC+necessidade)     |
|remuneração pela função de trabalho                            | remuneração pelo função de trabalho    |

t = time
d = distance, dimension, peers
e = energia aplicada
w = trabalho
n = necessidade
F = função
Fw = função de trabalho
eC = Custo energetico de manutenção do sistema
rFw = Remuneração pela função de trabalho
tw = tempo(t) de trabalho
tE = tempo(t) de estudo

Trabalho(w) é equivalente ao alcance(d) do trabalho(w):

    w = e * d

calcula-se a função(F) de trabalho(w), multiplicando trabalho(w) por tempo(t):
    
    Fw = w * t

Se o usuario(usr) utiliza energia(e) para viver, e passa a utilizar mais para atividades emergentes como estudar e/ou trabalhar, passa a existir o custo de energia(e), a necessidade(n) de energia(e) para o (usr), equivale ao numero de usr's, multiplicado pelo tempo estudo(E) somado ao tempo(t) de trabalho(w):

    usr = (tE + tw)
    n = usr * e
    ou
    n = (((tE + tw) * e) - eC)

Para o custo energético de manutenção do sistema(eC), multiplica-se o custo energia(e) do ser(eS) por tempo(t):

    eC = e * t

entao para remuneração(r) pela função(F) de trabalho(w), soma-se Fw ao custo energético de manutenção do corpo(eC):

    rFw = Fw + eC

Na função de estudo(E), a função(F) de trabalho(w) é igual a soma entre sistema(eC) e n:

    FE = n + eC

######################################################################################################################
#<#>######### Better viewed in half, or full screen mode. This 3 lines must fit exactly into the window ##########<#>
######################################################################################################################

startup(project)>bitcoin< >ethereum
  <^>-------------------<^>state-money

startup = "hosted inside actual system presets, ex.: crowdfunding

project = deliver money/resources from a user to another(user0<>user00<>user01 ... etc)

bitcoin = holds user's coins

ethereum = optimize, keep, and organize bureoucracy from contracts and trasactions between user's

state-money = bridge local state-coins from user's to project, and from project to user's

######################################################################################################################
#<#>######### Better viewed in half, or full screen mode. This 3 lines must fit exactly into the window ##########<#>
######################################################################################################################

0 = OS: to produce the project from within(scan, text, edit, format)
00 = email: virtual identity and messagebox
01 = bitcoin wallet: to manage resources
02 = github/archive/ethereum: manage and publish material from OS
03 = website: gather github and archive material, plus generate a new content, making an original reference domain,
                while linking thus directing related profits to the bitcoin/ether wallets.
     01: All Project content published at website, github, archive, and ether. Social media and other portals should
        be included and linked to the project features at this point, leading it to the descentralization.
        (Youtube, Twitter, Blogs, Adsense, Facebook, Vimeo, Instagram, Numerai, Decentralized systems, etc) 

######################################################################################################################
#<#>######### Better viewed in half, or full screen mode. This 3 lines must fit exactly into the window ##########<#>
######################################################################################################################

item = var

ad([resources]<>[market]<>[money{virtual resource)])

entity = item(s) of ad

resource = physical world: energy in general: objects, work, transactions, transport, data,energy

money = coins, ecoins, exchange(entity to needing)

ad = lead the content to the consumer that needs it, resulting in at least one exchange(data to read)


user{ad([resources]<>[market]<>[money{virtual resource)])}

user = interpret data while use/move: data, money and resources


system(data({user{system{ad([resources]<>[market]<>[money{virtual resource)])}}}))

system = holds all the related data, allowing and helping user's to produce resources
        (manage and create data: transform resources in general(as well money, ad, entity, user, and system))

data = all items on system(each one, and total)

classvar(var)

energy(program)

energy = (program(energyinput - energyoutput(program)))

program = (function(function(class(var))))

function = (program(function(energy("""Function to be executed"""))))

personalagent = ai(robot(humanoid(ai)))

ai = function

robot = mechanicbody(ai)
        mechanic = """ physical body: built in ai function(s) pre-requisites and requisitions """
        body = central and total mechanic extension

        for robot: robot(energy) + system(energy)
            system = distribution(energy) + system(energy)
                distribution = program(energy)


"---------------------------------------------------------------"   
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""   """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    ################################################################    
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
################################################################
'''''''''''''''''''II    IIII 1FTTTI $$$$$$$''''''''''''''''''''
'''''''''''''''''''II    II'  __  I  $$$$$$$'   ''''''''''''''''
                 ''II    II   IJ  I  $$$$$$$''''''''''''''''''''
'''''''''''''''''''IILII IIII IIIII  $IIIII$''''''''''''''''''''
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
################################################################
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
################################################################
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
0000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111111111111111111111111111111111111
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

classvar(var)

energy(program)

energy = (program(energyinput - energyoutput(program)))

program = (function(function(class(var))))

function = (program(function(energy("""Function to be executed"""))))

personalagent = ai(robot(humanoid(ai)))

ai = function

robot = mechanicbody(ai)
        mechanic = """ physical body: built in ai function(s) pre-requisites and requisitions """
        body = central and total mechanic extension

        for robot: robot(energy) + system(energy)
            system = distribution(energy) + system(energy)
                distribution = program(energy)

classvar(var(energy(program(energy(program)(energy(program(energy = (program(energyinput - energyoutput(program(program = (function(function(class(var(function = (program(function(energy("""Function to be executed"""(personalagent = ai(robot(humanoid(ai(ai = function(robot = mechanicbody(ai(mechanic = """ physical body: built in ai function(s) pre-requisites and requisitions """(body = central and total mechanic extension(for robot: robot(energy) + system(energy))(system = distribution(energy) + system(energy))(distribution = program(energy)))))))))))))))))))))))))))))))                      


program(personalagent(robot(program)) +

distribution(energy + robot(program)) + 

energy((system) + 

distribution((distribution(robot)) + system + 

Classvar(var((distribution)
classvar(var(energy(program(energy(program)(energy(program(energy = (program(energyinput - energyoutput(program(program = (function(function(class(var(function = (program(function(energy("""Function to be executed"""(personalagent = ai(robot(humanoid(ai(ai = function(robot = mechanicbody(ai(mechanic = """ physical body: built in ai function(s) pre-requisites and requisitions """(body = central and total mechanic extension(for robot: robot(energy) + system(energy))(system = distribution(energy) + system(energy))(distribution = program(energy)))))))))))))))))))))))))))))))
)     

)

)

)

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


